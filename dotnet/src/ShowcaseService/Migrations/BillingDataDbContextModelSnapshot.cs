// <auto-generated />
using System;
using MedicalResearch.BillingData.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalResearch.BillingData.Migrations
{
    [DbContext(typeof(BillingDataDbContext))]
    partial class BillingDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillableTaskEntity", b =>
                {
                    b.Property<Guid>("TaskGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaskExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskGuid");

                    b.HasIndex("VisitGuid");

                    b.ToTable("BdrBillableTasks", (string)null);
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillableVisitEntity", b =>
                {
                    b.Property<Guid>("VisitGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BillingDemandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExecutionEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutorValidationDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParticipantIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SponsorValidationDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitExecutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitProcedureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitGuid");

                    b.HasIndex("BillingDemandId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("StudyExecutionIdentifier");

                    b.ToTable("BdrBillableVisits", (string)null);
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillingDemandEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransmissionDateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudyExecutionIdentifier");

                    b.ToTable("BdrBillingDemands", (string)null);
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.InvoiceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OffcialInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentReceivedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentSubmittedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudyExecutionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransmissionDateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudyExecutionIdentifier");

                    b.ToTable("BdrInvoices", (string)null);
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.StudyExecutionScopeEntity", b =>
                {
                    b.Property<Guid>("StudyExecutionIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutingInstituteIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyWorkflowName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StudyWorkflowVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudyExecutionIdentifier");

                    b.ToTable("BdrStudyExecutionScopes", (string)null);
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillableTaskEntity", b =>
                {
                    b.HasOne("MedicalResearch.BillingData.Persistence.BillableVisitEntity", "BillableVisit")
                        .WithMany("BillableTasks")
                        .HasForeignKey("VisitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillableVisit");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillableVisitEntity", b =>
                {
                    b.HasOne("MedicalResearch.BillingData.Persistence.BillingDemandEntity", "AssignedBillingDemand")
                        .WithMany("AssignedVisits")
                        .HasForeignKey("BillingDemandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MedicalResearch.BillingData.Persistence.InvoiceEntity", "AssignedInvoice")
                        .WithMany("AssignedVisits")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MedicalResearch.BillingData.Persistence.StudyExecutionScopeEntity", "StudyExecution")
                        .WithMany("BillableVisits")
                        .HasForeignKey("StudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedBillingDemand");

                    b.Navigation("AssignedInvoice");

                    b.Navigation("StudyExecution");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillingDemandEntity", b =>
                {
                    b.HasOne("MedicalResearch.BillingData.Persistence.StudyExecutionScopeEntity", "StudyExecution")
                        .WithMany("BillingDemands")
                        .HasForeignKey("StudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyExecution");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.InvoiceEntity", b =>
                {
                    b.HasOne("MedicalResearch.BillingData.Persistence.StudyExecutionScopeEntity", "StudyExecution")
                        .WithMany("Invoices")
                        .HasForeignKey("StudyExecutionIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyExecution");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillableVisitEntity", b =>
                {
                    b.Navigation("BillableTasks");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.BillingDemandEntity", b =>
                {
                    b.Navigation("AssignedVisits");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.InvoiceEntity", b =>
                {
                    b.Navigation("AssignedVisits");
                });

            modelBuilder.Entity("MedicalResearch.BillingData.Persistence.StudyExecutionScopeEntity", b =>
                {
                    b.Navigation("BillableVisits");

                    b.Navigation("BillingDemands");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
